#!/usr/bin/env node
'use strict';

process.title = 'ALKS';

var program   = require('commander'),
    clc       = require('cli-color'),
    _         = require('underscore'),
    async     = require('async'),
    alks      = require('alks-node'),
    config    = require('../package.json'),
    Iam       = require('../lib/iam'),
    Developer = require('../lib/developer'),
    utils     = require('../lib/utils');

var logger = 'iam-delete';

program
    .version(config.version)
    .description('remove an IAM role')
    .option('-n, --rolename [rolename]', 'the name of the role to delete')
    .option('-a, --account [alksAccount]', 'alks account to use')
    .option('-r, --role [alksRole]', 'alks role to use')
    .option('-F, --favorites', 'filters favorite accounts')
    .option('-v, --verbose', 'be verbose')
    .parse(process.argv);

var roleName    = program.rolename,
    alksAccount = program.account,
    alksRole    = program.role,
    filterFaves = program.favorites || false;

utils.log(program, logger, 'validating role name: ' + roleName);
if(_.isEmpty(roleName)){
    utils.errorAndExit('The role name must be provided.');
}

if(!_.isUndefined(alksAccount) && _.isUndefined(alksRole)){
    utils.log(program, logger, 'trying to extract role from account');
    alksRole = utils.tryToExtractRole(alksAccount);
}

Iam.getIAMKey(program, logger, alksAccount, alksRole, false, filterFaves, function(err, key, developer, auth){
    if(err){
        return utils.errorAndExit(err);
    }

    var data = _.extend({}, developer, key);
    utils.log(program, logger, 'calling api to delete role: ' + roleName);

    alks.deleteIamRole(data, auth, roleName, { debug: program.verbose, ua: utils.getUA() }, function(err, data){
        if(err){
            return utils.errorAndExit(err);
        }

        console.log(clc.white(['The role ', roleName, ' was deleted'].join('')));
        utils.log(program, logger, 'checking for updates');
        utils.checkForUpdate();
        Developer.trackActivity(logger);
    });
});