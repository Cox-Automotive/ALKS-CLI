#!/usr/bin/env node
'use strict';

process.title = 'ALKS';

let program   = require('commander'),
    clc       = require('cli-color'),
    opn       = require('opn'),
    alks      = require('alks-node'),
    config    = require('../package.json'),
    utils     = require('../lib/utils'),
    Developer = require('../lib/developer');

program
    .version(config.version)
    .description('stores your alks refresh token')
    .option('-v, --verbose', 'be verbose')
    .parse(process.argv);

let logger = 'dev-login-2fa';

utils.log(program, logger, 'loading developer');
Developer.getDeveloper(function(err, data){
    var url = data.server.replace(/rest/, 'token-management');
    console.error('Opening ALKS 2FA Page.. Be sure to login using Okta..');
    console.error("If the page does not open, visit the following URL: ", url);
    opn(url).then(() => {}).catch(() => {});
    console.error('Please copy your refresh token from ALKS and paste below..');

    Developer.getPasswordFromPrompt(function(err, refreshToken){
        utils.log(program, logger, 'exchanging refresh token for access token');

        alks.refreshTokenToAccessToken(data, refreshToken, { debug: program.verbose, ua: utils.getUA() }, function(err){
            if(err){
                return utils.errorAndExit('Error validating refresh token. ' +  err.message);
            }

            console.error(clc.white('Refresh token validated!'));
            Developer.storeToken(refreshToken, function(err, saved){
                if(!saved){
                    utils.log(program, logger, 'error saving token! ' + err.message);
                    utils.passwordSaveErrorHandler(err);
                }
                else{
                    console.error(clc.white('Refresh token saved!'));
                }

                utils.log(program, logger, 'checking for updates');
                utils.checkForUpdate();
                Developer.trackActivity(logger);

                setTimeout(function(){ process.exit(0); }, 1000); // needed for if browser is still open
            });
        });
    }, 'Refresh Token');
});
