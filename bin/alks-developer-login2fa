#!/usr/bin/env node
'use strict';

process.title = 'ALKS';

var program   = require('commander'),
    clc       = require('cli-color'),
    _         = require('underscore'),
    opn       = require('opn'),
    alks     = require('alks.js'),
    config    = require('../package.json'),
    utils     = require('../lib/utils'),
    Developer = require('../lib/developer');

program
    .version(config.version)
    .description('stores your alks refresh token')
    .option('-v, --verbose', 'be verbose')
    .parse(process.argv);

var logger = 'dev-login-2fa';

utils.log(program, logger, 'loading developer');
Developer.getDeveloper(function(err, data){
    console.error('Opening ALKS 2FA Page.. Be sure to login using Okta..');
    opn(data.server.replace(/rest/, 'token-management'));
    console.error('Please copy your refresh token from ALKS and paste below..');

    Developer.getPasswordFromPrompt(function(err, refreshToken){
        utils.log(program, logger, 'exchanging refresh token for access token');

        alks.getAccessToken({
            baseUrl: data.server,
            refreshToken: refreshToken
        }).then(() => {
            console.error(clc.white('Refresh token validated!'));

            Developer.storeToken(refreshToken, function (err, saved) {
                if (!saved) {
                    utils.log(program, logger, 'error saving token! ' + err.message);
                    utils.passwordSaveErrorHandler(err);
                } else {
                    console.error(clc.white('Refresh token saved!'));
                }

                utils.log(program, logger, 'checking for updates');
                utils.checkForUpdate();
                Developer.trackActivity(logger);

                setTimeout(function () {
                    process.exit(0);
                }, 1000); // needed for if browser is still open
            });

        }).catch(error => {
            return utils.errorAndExit('Error validating refresh token: ' + error);
        });
    }, 'Refresh Token');
});
