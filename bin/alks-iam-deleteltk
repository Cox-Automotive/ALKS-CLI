#!/usr/bin/env node
'use strict';

process.title = 'ALKS';

var program   = require('commander'),
    _         = require('underscore'),
    clc       = require('cli-color'),
    alks      = require('alks-node'),
    alks2      = require('alks.js'),
    Iam       = require('../lib/iam'),
    utils     = require('../lib/utils'),
    Developer = require('../lib/developer'),
    config    = require('../package.json');

var logger       = 'iam-deleteltk';

program
    .version(config.version)
    .description('deletes an IAM Longterm Key')
    .option('-n, --iamusername [iamUsername]', 'the name of the iam user associated with the LTK')
    .option('-a, --account [alksAccount]', 'alks account to use')
    .option('-r, --role [alksRole]', 'alks role to use')
    .option('-F, --favorites', 'filters favorite accounts')
    .option('-v, --verbose', 'be verbose')
    .parse(process.argv);

var iamUsername = program.iamusername,
    alksAccount = program.account,
    alksRole    = program.role,
    filterFaves = program.favorites || false;

utils.log(program, logger, 'validating iam user name: ' + iamUsername);
if(_.isEmpty(iamUsername)){
    utils.errorAndExit('The IAM username is required.');
}

if(!_.isUndefined(alksAccount) && _.isUndefined(alksRole)){
    utils.log(program, logger, 'trying to extract role from account');
    alksRole = utils.tryToExtractRole(alksAccount);
}

Iam.getIAMAccount(program, logger, alksAccount, alksRole, filterFaves, function(err, developer, auth, alksAccount, alksRole){
    if(err){
        return utils.errorAndExit(err);
    }

    // delete the LTK
    var data = _.extend({}, developer);
    data.alksAccount = alksAccount;
    data.alksRole = alksRole;
    utils.log(program, logger, 'calling api to delete ltk: ' + iamUsername);

    alks2.getAccessToken({
        baseUrl: data.server,
        refreshToken: auth.token
    }).then(tokenInfo => {
        utils.log(program, logger, 'exchanging for access token');

        let alksCreate = alks2.create({
            baseUrl: data.server,
            accessToken: tokenInfo.accessToken
        });

        alksCreate.deleteIAMUser({
            account: data.alksAccount,
            role: data.alksRole,
            iamUserName: iamUsername
        }).then(() => {
            console.log(clc.white(['LTK deleted for IAM User: ', iamUsername].join('')));

            utils.log(program, logger, 'checking for updates');
            utils.checkForUpdate();
            Developer.trackActivity(logger);

        }).catch(error => {
            utils.log(program, logger, 'error deleting ltk: ' + error);
            return utils.errorAndExit(err);
        });
    }).catch(error => {
        utils.log(program, logger, 'error exchanging for access token: ' + error);
        return utils.errorAndExit(err);
    });
});
