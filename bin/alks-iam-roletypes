#!/usr/bin/env node
'use strict';

process.title = 'ALKS';

var program   = require('commander'),
    clc       = require('cli-color'),
    _         = require('underscore'),
    async     = require('async'),
    alks      = require('alks-node'),
    config    = require('../package.json'),
    Developer = require('../lib/developer'),
    utils     = require('../lib/utils');

var logger     = 'iam-roletypes',
    outputVals = [ 'list', 'json' ];

program
    .version(config.version)
    .description('list the available iam role types')
    .option('-o, --output [format]', 'output format (' + outputVals.join(', ') + '), default: ' + outputVals[0], outputVals[0])
    .option('-v, --verbose', 'be verbose')
    .parse(process.argv);

var output = program.output;

if(!_.contains(outputVals, output)){
    utils.errorAndExit('The output provided ('+output+') is not in the allowed values: ' + outputVals.join(', '));
}

async.waterfall([
    // get developer
    function(cb){
        utils.log(program, logger, 'getting developer');
        Developer.getDeveloper(cb);
    },
    // get password
    function(developer, cb){
        utils.log(program, logger, 'getting password');
        Developer.getPassword(program, function(err, password){
            cb(err, developer, password);
        });
    },
    // load available account/roles
    function(developer, password, cb){
        utils.log(program, logger, 'getting list of role types from REST API');
        alks.getIamRoleTypes(developer.server, developer.userid, password, { debug: program.verbose, ua: utils.getUA() }, cb);
    }
], function(err, roleTypes){
    if(err){
        return utils.errorAndExit(err);
    }

    utils.log(program, logger, 'outputting list of ' + (roleTypes ? roleTypes.length : -1) + ' role types');
    console.error(clc.white.underline.bold('\nAvailable IAM Role Types'));

    if(output === 'list'){
        _.each(roleTypes, function(roleType, i){
            console.error(clc.white([ (i < 9 ? ' ' : ''), i+1, ') ', roleType ].join('')));
        });
    }
    else{
        console.log(JSON.stringify(roleTypes));
    }

    utils.log(program, logger, 'checking for updates');
    utils.checkForUpdate();
    Developer.trackActivity(logger);
});