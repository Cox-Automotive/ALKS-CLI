#!/usr/bin/env node
'use strict';

process.title = 'ALKS';

let program   = require('commander'),
    clc       = require('cli-color'),
    async     = require('async'),
    forever   = require('forever'),
    fs        = require('fs'),
    path      = require('path'),
    exec      = require('child_process').exec,
    config    = require('../package.json'),
    utils     = require('../lib/utils');

program
    .version(config.version)
    .description('starts the metadata server')
    .option('-v, --verbose', 'be verbose')
    .parse(process.argv);

let logger = 'server-start';

if(!utils.isOSX()){
    utils.errorAndExit('The metadata server is only supported on OSX.');
}

function runServerDaemon(){
    console.error(clc.white('Starting metadata server..'));

    forever.startDaemon(path.join(__dirname, '../lib') + '/metadata-server.js', {
        uid: 'alks-metadata',
        root: path.join(__dirname, '../')
    });

    console.error(clc.white('Metadata server now listening on: 169.254.169.254'));
}

utils.log(program, logger, 'Checking if forwarding daemon is already installed..');

if(!fs.existsSync('/etc/pf.anchors/com.coxautodev.alks')){
    console.error(clc.white('Installing metadata daemon rules. You may be prompted for your system password since this requires escalated privileges.'));
    let servicePath = path.join(__dirname, '../service');

    async.waterfall([
        function(callback){
            utils.log(program, logger, 'Adding pf.anchor');

            exec('sudo cp '+servicePath+'/com.coxautodev.alks /etc/pf.anchors/', function(err, stdout, stderr){
                callback(err);
            });
        },
        function(callback){
            utils.log(program, logger, 'Adding launch daemon');
            exec('sudo cp '+servicePath+'/com.coxautodev.alks.Ec2MetaDataFirewall.plist /Library/LaunchDaemons/', function(err, stdout, stderr){
                callback(err);
            });
        },
        function(callback){
            utils.log(program, logger, 'Loading launch daemon');
            exec('sudo launchctl load -w /Library/LaunchDaemons/com.coxautodev.alks.Ec2MetaDataFirewall.plist', function(err, stdout, stderr){
                callback(err);
            });
        }
    ], function(err){
        if(err){
            console.log(clc.red('Error installing metadata daemon.'), err);
        }
        else{
            console.log(clc.white('Successfully installed metadata daemon.'));
            runServerDaemon();
        }
    });
}
else{
    utils.log(program, logger, 'Daemon is already installed..');
    runServerDaemon();
}
